<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xmlns:tx="http://www.springframework.org/schema/tx" xmlns:mybatis="http://mybatis.org/schema/mybatis-spring"
       xmlns:mybatis-spring="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd http://www.springframework.org/schema/cache http://www.springframework.org/schema/cache/spring-cache.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">




    <!--spring的配置文件，主要配置和业务逻辑有关的-->
    <!--数据源，事务控制-->
    <context:property-placeholder location="classpath:jdbc.properties"/>

    <bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
    <!-- 配置连接池属性 -->
    <property name="driverClass" value="${jdbc.driver}"/>
    <property name="jdbcUrl" value="${jdbc.url}"/>
    <property name="user" value="${jdbc.username}"/>
    <property name="password" value="${jdbc.password}"/>
    </bean>
    <!--配置和mybatis的整合-->


    <!--配置扫描器，将mybatis的接口实现类加到ioc容器中，mybatis的接口是一个代理对象-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--扫描所有的dao接口实现加入到ioc容器中-->
         <property name="basePackage" value="com.dao"></property>
    </bean>
    <!--事务控制-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--控制住数据源-->
        <property name="dataSource" ref="pooledDataSource"></property>
    </bean>
    <!--开启基于注解的事务，使用xml配置形式的事务（必要主要的都是使用配置式）-->
    <!--<tx:annotation-driven transaction-manager="transactionManager"/>-->

    <bean id="sessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <property name="configLocation" value="classpath:mybatis-config.xml"></property>
        <property name="dataSource" ref="pooledDataSource"></property>
        <!--mapper下所有的文件都是它的映射文件-->
        <!--<property name="mapperLocations" value="classpath:mapper/*"></property>-->
        <property name="mapperLocations" value="classpath:mapper/*.xml"/>
    </bean>
<!--扫描dao接口-->
    <mybatis-spring:scan base-package="com.dao"/>
    <!--不扫控制器-->
    <context:component-scan base-package="com.controller">
        <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"></context:exclude-filter>
    </context:component-scan>
    <!--<aop:config>-->
        <!--&lt;!&ndash;切入点表达式&ndash;&gt;-->
        <!--<aop:pointcut id="txPoint" expression="execution(*com.service..*(..))"></aop:pointcut>-->
    <!--&lt;!&ndash;配置事务增强&ndash;&gt;-->
        <!--<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/></aop:config>-->
    <!--配置事务增强，事务如何切入-->
    <!--<tx:advice id="txAdvice">-->
       <!--<tx:attributes>-->
           <!--&lt;!&ndash;所有的方法都是事务方法&ndash;&gt;-->
           <!--<tx:method name="*"/>-->
           <!--&lt;!&ndash;以get开始的所有方法&ndash;&gt;-->
           <!--<tx:method name="get" read-only="true"/>-->
       <!--</tx:attributes>-->
    <!--</tx:advice>-->
    <!--spring配置文件的核心点（数据源，与mybatis的整合，事务控制）-->
    <!--import引入其他配置文件-->
    <import resource="classpath:spring/spring-service.xml"/>
</beans>